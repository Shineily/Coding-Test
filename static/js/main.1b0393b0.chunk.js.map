{"version":3,"sources":["componet/MenuContainer.js","axios.js","componet/SimpleTabs.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","position","width","nested","paddingLeft","spacing","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","transition","transitions","create","NestedList","props","classes","React","useState","dataprops","data","products","subcategories","Array","length","fill","open","setOpen","text","setText","handleClick","index","List","component","aria-labelledby","subheader","ListSubheader","id","className","InputBase","value","onChange","event","target","placeholder","input","inputProps","map","sub","filter","prod","translations","en","title","toLowerCase","includes","ListItem","button","onClick","ListItemText","primary","es","Collapse","in","timeout","unmountOnExit","ind","disablePadding","secondary","instance","axios","baseURL","TabPanel","children","other","role","hidden","Box","p","Typography","flexGrow","SimpleTabs","setData","useEffect","then","res","setValue","AppBar","Tabs","indicatorColor","textColor","variant","newValue","aria-label","Tab","label","a11yProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1b0393b0.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\n// import axios from '../axios';\r\n\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'center',\r\n    width: '100%',\r\n    // maxWidth: 360,\r\n    // backgroundColor: '#d9ecf2',\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function NestedList(props) {\r\n  const classes = useStyles();\r\n  const [data, setData] = React.useState(props.dataprops);\r\n\r\n  const products = data.subcategories;\r\n  const [open, setOpen] = React.useState(\r\n    new Array(products.length).fill(false)\r\n  );\r\n  const [text, setText] = React.useState('');\r\n\r\n  const handleClick = (index) => () => {\r\n    open[index] = !open[index];\r\n    setOpen([...open]);\r\n  };\r\n  // console.log(text);\r\n\r\n  const searchText = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  // console.log(text);\r\n\r\n  return (\r\n    <List\r\n      component='nav'\r\n      aria-labelledby='nested-list-subheader'\r\n      subheader={\r\n        <ListSubheader component='div' id='nested-list-subheader'>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              value={text}\r\n              onChange={searchText}\r\n              placeholder='Searchâ€¦'\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </ListSubheader>\r\n      }\r\n      className={classes.root}\r\n    >\r\n      {data.subcategories.length > 0\r\n        ? data.subcategories\r\n            .map((sub) => {\r\n              const products = sub.products.filter((prod) =>\r\n                prod.translations.en.title\r\n                  .toLowerCase()\r\n                  .includes(text.toLowerCase())\r\n              );\r\n              return { ...sub, products };\r\n            })\r\n            .filter((sub) => sub.products.length > 0)\r\n            .map((sub, index) => (\r\n              <div>\r\n                <ListItem button onClick={handleClick(index)}>\r\n                  <ListItemText\r\n                    primary={`${sub.translations.en.title} (${sub.translations.es.title})`}\r\n                  />\r\n                  {open[index] ? <ExpandLess /> : <ExpandMore />}\r\n                </ListItem>\r\n                <Collapse in={open[index]} timeout='auto' unmountOnExit>\r\n                  {sub.products.map((prod, ind) => (\r\n                    <div>\r\n                      <List component='div' disablePadding>\r\n                        <ListItem button className={classes.nested}>\r\n                          <ListItemText\r\n                            primary={prod.translations.en.title}\r\n                            secondary={prod.translations.es.title}\r\n                          />\r\n                        </ListItem>\r\n                      </List>\r\n                    </div>\r\n                  ))}\r\n                </Collapse>\r\n              </div>\r\n            ))\r\n        : data.products\r\n            .filter((prod) =>\r\n              prod.translations.en.title\r\n                .toLowerCase()\r\n                .includes(text.toLowerCase())\r\n            )\r\n            .map((sub, index) => (\r\n              <div>\r\n                <ListItem button onClick={handleClick(index)}>\r\n                  <ListItemText\r\n                    primary={`${sub.translations.en.title} (${sub.translations.es.title})`}\r\n                  />\r\n                </ListItem>\r\n              </div>\r\n            ))}\r\n    </List>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.adminsite.appsinti.com'\r\n});\r\n\r\n\r\nexport default instance;","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport NestedList from './MenuContainer';\r\nimport axios from '../axios';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role='tabpanel'\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `full-width-tab-${index}`,\r\n    'aria-controls': `full-width-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    // backgroundColor: '#d9ecf2',\r\n  },\r\n}));\r\n\r\nfunction SimpleTabs() {\r\n  const [data, setData] = React.useState([]);\r\n\r\n  useEffect(() => {\r\n    axios('/menu/product').then((res) => setData(res.data));\r\n    // console.log(data);\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position='static' color='default'>\r\n        <Tabs\r\n          indicatorColor='primary'\r\n          textColor='primary'\r\n          variant='fullWidth'\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label='simple tabs example'\r\n        >\r\n          {data.map((index, ind) => (\r\n            <Tab\r\n              value={ind}\r\n              label={index.translations.en.title}\r\n              {...a11yProps(ind)}\r\n            />\r\n          ))}\r\n        </Tabs>\r\n      </AppBar>\r\n      {data.map((index, ind) => (\r\n        <TabPanel value={value} index={ind} className={classes.root}>\r\n          <NestedList dataprops={index} />\r\n        </TabPanel>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SimpleTabs;\r\n","import React from 'react';\nimport SimpleTabs from './componet/SimpleTabs';\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"AppHeader\">\n        Menu\n      </header>\n      <SimpleTabs/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}